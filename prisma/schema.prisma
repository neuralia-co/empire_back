
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("LOCAL_URI")
}


model User {
  id              Int       @id @default(autoincrement())
  email           String    @unique
  name            String
  password        String
  createdInvoices Invoice[] @relation("createdInvoices")
  updatedInvoices Invoice[] @relation("updatedInvoices")
  companies       UsersOnCompanies[]
}

model Company {
  id              Int    @id @default(autoincrement())
  name            String
  siren           String @unique
  color           String
  companyUsers    UsersOnCompanies[]
  companyInvoices InvoicesOnCompanies[]
}


model Invoice {
  id               Int         @id @default(autoincrement())
  createdAt        DateTime    @default(now())
  createdBy        User        @relation("createdInvoices",fields: [createdById], references: [id])
  createdById      Int
  updatedAt        DateTime?   @updatedAt
  updatedBy        User?       @relation("updatedInvoices",fields: [updatedById], references: [id])
  updatedById      Int?
  title            String      @db.VarChar(255)
  content          String?
  url              String
  pretaxValue      Float
  VAT              Float
  invoiceCompanies InvoicesOnCompanies[]
}

model UsersOnCompanies {
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  company    Company  @relation(fields: [companyId], references: [id])
  companyId  Int
  assignedAt DateTime @default(now())

  @@id([userId, companyId])
}


model InvoicesOnCompanies {
  invoice    Invoice     @relation(fields: [invoiceId], references: [id])
  invoiceId  Int
  company    Company     @relation(fields: [companyId], references: [id])
  companyId  Int
  assignedAt DateTime    @default(now())
  debit      Boolean

  @@id([invoiceId, companyId])

}


